on:
  push:
    branches:
      - main
  pull_request:
    branches: 
      - main
jobs:
  build:
    name: build
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            container: debian:oldstable
    container: ${{ matrix.container }}
    env:
      NUITKA_CACHE_DIR: ${{ github.workspace }}/nuitka/cache
    steps:
      - name: Install container packages
        if: matrix.container == 'debian:oldstable'
        run: |
          apt update
          apt install -y gcc make libglib2.0-0 ccache
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'
      - name: Install uv
        uses: astral-sh/setup-uv@v6
      - name: Install dependencies
        run: uv sync --locked
      - name: Cache Nuitka cache directory
        uses: actions/cache@v4
        with:
          path: ${{ env.NUITKA_CACHE_DIR }}
          key: nuitka-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('uv.lock', 'src/**/*.py', 'scripts/*.py') }}
          restore-keys: |
            nuitka-${{ runner.os }}-${{ runner.arch }}-
      - name: Build
        run: uv run python scripts/build.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-${{ runner.os }}
          path: dist/*
          retention-days: 1
